upstream app_upstream {
	least_conn;
	server 127.0.0.1:{{ shared_vars.app_port }} max_fails=3 fail_timeout=30s;
	keepalive {{ nginx_config.keepalive_requests }};
}

server {
	listen 80;
	server_name {{ shared_vars.domain_name }};

	access_log {{ nginx_config.access_log }};
	error_log {{ nginx_config.error_log }};

	# Security headers
	{% for header, value in nginx_config.security_headers.items() %}
	add_header {{ header }} "{{ value }}" always;
	{% endfor %}

	# Gzip configuration
	{% if nginx_config.gzip %}
	gzip on;
	gzip_min_length {{ nginx_config.gzip_min_length }};
	gzip_comp_level {{ nginx_config.gzip_comp_level }};
	gzip_types {{ nginx_config.gzip_types | join(' ') }};
	{% endif %}

	root {{ shared_vars.app_root }}/public;

	# Rate limiting
	{% if nginx_config.rate_limit.enable %}
	limit_req_zone $binary_remote_addr zone=one:{{ nginx_config.rate_limit.zone_size }} rate={{ nginx_config.rate_limit.rate }};
	limit_req zone=one burst={{ nginx_config.rate_limit.burst }} nodelay;
	{% endif %}

	location / {
		try_files $uri @proxy;
	}

	location @proxy {
		proxy_pass http://app_upstream;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		
		proxy_connect_timeout {{ nginx_config.proxy_connect_timeout }};
		proxy_send_timeout {{ nginx_config.proxy_send_timeout }};
		proxy_read_timeout {{ nginx_config.proxy_read_timeout }};
		proxy_buffer_size {{ nginx_config.proxy_buffer_size }};
		proxy_buffers {{ nginx_config.proxy_buffers }};
		proxy_busy_buffers_size {{ nginx_config.proxy_busy_buffers_size }};
	}

	# Static file caching
	{% if nginx_config.static_file_cache.enable %}
	location ~* \.({{ nginx_config.static_file_cache.types | join('|') }})$ {
		expires {{ nginx_config.static_file_cache.max_age }};
		add_header Cache-Control "public, no-transform";
	}
	{% endif %}
}