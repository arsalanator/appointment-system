name: Production Pipeline

on:
  pull_request_review:
    types: [submitted]

jobs:
  deploy-production:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    environment: production
    env:
      DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING_PROD }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Build frontend
      - name: Install frontend dependencies
        working-directory: user-facing-frontend/React-Typescript
        run: npm ci

      - name: Copy production environment
        working-directory: user-facing-frontend/React-Typescript
        run: cp .env.prod .env

      - name: Build frontend
        working-directory: user-facing-frontend/React-Typescript
        run: npm run build

      # Build backend
      - name: Install backend dependencies
        working-directory: user-facing-backend/Express-Typescript
        run: npm ci

      - name: Copy production environment
        working-directory: user-facing-backend/Express-Typescript
        run: cp .env.prod .env

      # Move frontend build to backend
      - name: Move frontend build to backend
        run: |
          mkdir -p user-facing-backend/Express-Typescript/public/build
          cp -r user-facing-frontend/React-Typescript/build/* user-facing-backend/Express-Typescript/public/build/

      # Build and push Docker image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: user-facing-backend/Express-Typescript
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/appointment-system:${{ github.sha }}

      # Deploy to Firebase Production
      - name: Deploy to Firebase Production
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID_PROD }}
          channelId: 'live'